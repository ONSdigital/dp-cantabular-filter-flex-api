swagger: '2.0'
info:
  description: >-
    Create and submit custom queries, known as `filters`, against a given
    Cantabular dataset. Specify which values, known as `options`, are of
    interest in each `dimension`, and then submit a filter. This generates a
    `filter output`, which provides links to the filtered results in a variety
    of formats.
  version: 1.0.0
  title: Filter a Cantabular dataset
  license:
    name: Open Government Licence v3.0
    url: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/
basePath: /v1
tags:
  - name: Public
    description: Used to filter published Cantaular datasets
  - name: "Private"
    description: "Used to filter Cantabular datasets pre-publish"
schemes:
  - http
parameters:
  dataset_id:
    name: dataset_id
    description: "Id that represents a dataset"
    in: path
    required: true
    type: string
  edition:
    name: edition
    description: "An edition of a dataset"
    in: path
    required: true
    type: string
  filter_id:
    name: id
    type: string
    required: true
    description: The unique filter ID for customising a dataset
    in: path
  filter_output_id:
    name: filter_output_id
    type: string
    required: true
    description: The unique filter output ID for a customised dataset
    in: path
  geography:
    description: "The name of the geography dimension that is being flexed, e.g. ward"
    name: geography
    in: query
    required: false
    type: string
  page_limit:
    name: limit
    description: >-
      Limit the number of items that will be returned. Defaults to 20 and capped
      at 500
    in: query
    required: false
    type: integer
    default: 20
    minimum: 0
    maximum: 500
  offset:
    name: offset
    description: >-
      Starting index of the items array that will be returned. By default it is
      zero, meaning that the returned items will start from the beginning.
    in: query
    required: false
    type: integer
    default: 0
    minimum: 0
  name:
    name: name
    type: string
    required: true
    description: The name of a dimension
    in: path
  options:
    required: false
    name: options
    schema:
      $ref: '#/definitions/Options'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  option:
    name: option
    type: string
    required: true
    description: The single option for a dimension
    in: path
  version:
    name: version
    description: "A version of a dataset"
    in: path
    required: true
    type: string
  dimension:
    name: dimension
    schema:
      $ref: '#/definitions/Dimension'
    required: true
    description: A dimension to filter the dataset
    in: body
  patch_options:
    required: true
    name: patch
    schema:
      $ref: '#/definitions/PatchOptions'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  new_filter:
    name: filter
    schema:
      $ref: '#/definitions/NewFilterRequest'
    required: true
    description: Model of all editable properties within a filter
    in: body
  update_filter_output:
    name: filter_output
    schema:
      $ref: '#/definitions/UpdateOutputRequest'
    required: true
    description: Model of all editable properties within a filter output
    in: body
  submitted:
    name: submitted
    description: A flag to indicate the submission of a filter
    in: query
    type: boolean
  update_filter:
    name: filter
    schema:
      $ref: '#/definitions/UpdateFilterRequest'
    required: true
    description: Model of all editable properties within a filter
    in: body
  event:
    name: event
    schema:
      $ref: '#/definitions/Event'
    required: true
    description: The model of an event
    in: body
  if_match:
    name: If-Match
    required: true
    description: >-
      Filter resource version, as returned by a previous ETag, to be validated;
      or '*' to skip the version check
    in: header
    type: string
securityDefinitions:
  InternalAPIKey:
    name: internal-token
    description: "API key used to allow only internal services to update the state of an import job"
    in: header
    type: apiKey
paths:
  /filter-outputs/{filter_output_id}:
    parameters:
      - $ref: '#/parameters/filter_output_id'
    get:
      tags:
      - "Public"
      - "Private"
      summary: "Get a filter output"
      description: "Get document describing the filter output"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter output was found and document is returned"
          schema:
            $ref: '#/definitions/GetFilterOutputResponse'
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Private"
      summary: "Update a filter output"
      description: |
        Update the filter output state and to contain downloads
      parameters:
      - $ref: '#/parameters/update_filter_output'
      responses:
        200:
          description: "The filter output has been updated"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        403:
          description: "Forbidden, the filter output state has been set to `completed`, resource has a list of downloadable files"
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters:
    post:
      tags:
        - Public
        - Private
      summary: Create a filter for a dataset
      description: >-
        Create a resource for listing a selection of dimensions and dimension
        options to be added to filter for a dataset
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/new_filter'
      responses:
        '201':
          description: filter was created
          schema:
            $ref: '#/definitions/CreateFilterResponse'
          headers:
            ETag:
              type: string
              description: Defines a unique filter resource version
        '400':
          description: Invalid request body
        '500':
          $ref: '#/responses/InternalError'
  /filters/{id}:
    parameters:
      - $ref: '#/parameters/filter_id'
    get:
      tags:
        - Public
        - Private
      summary: Get a filter
      description: Get document describing the filter
      produces:
        - application/json
      responses:
        '200':
          description: The filter was found and document is returned
          schema:
            $ref: '#/definitions/GetFilterResponse'
          headers:
            ETag:
              type: string
              description: Defines a unique filter resource version
        '404':
          $ref: '#/responses/FilterNotFound'
        '500':
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Public"
      summary: "Update a filter"
      description: "Update the filter by providing new properties, submit a filter for processing by setting query parameter `submitted` to `true`"
      parameters:
      - $ref: '#/parameters/update_filter'
      - $ref: '#/parameters/if_match'
      responses:
        200:
          description: "The filter job has been updated"
          schema:
            $ref: '#/definitions/UpdateFilterResponse'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body or If-Match header not provided"
        404:
          $ref: '#/responses/FilterNotFound'
        409:
          description: '#/responses/FilterConflict'
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions:
    get:
      tags:
        - "Public"
      summary: "Get all dimensions used in this filter"
      description: |
        Return a list of all dimensions which are going to be used to filter on
      parameters:
        - $ref: '#/parameters/filter_id'
        - $ref: '#/parameters/page_limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: "A list of dimension URLs"
          schema:
            type: array
            items:
              $ref: '#/definitions/GetFilterDimensionsResponse'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        404:
          $ref: '#/responses/FilterNotFound'
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
        - "Public"
        - "Private"
      summary: "Add a dimension to a filter"
      description: "Add a dimension to filter with a list of options"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/filter_id'
        - $ref: '#/parameters/options'
        - $ref: '#/parameters/if_match'
      responses:
        201:
          description: "The dimension was created"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body"
        404:
          description: "Filter job was not found"
        409:
          $ref: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions/{name}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Public"
      - "Private"
      summary: "Get a dimension from a filter"
      description: "Return details of a specific dimension within a filter"
      responses:
        200:
          description: "A Dimension within a filter was returned"
          schema:
            $ref: '#/definitions/DimensionItemWithArea'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Public"
      summary: "Update a dimension"
      description: "Update the filter by updating a selected dimension"
      parameters:
      - $ref: '#/parameters/dimension'
      - $ref: '#/parameters/if_match'
      responses:
        200:
          description: "The dimension has been updated"
          schema:
            $ref: '#/definitions/DimensionItem'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body, filter does not exist, or If-Match header not provided"
        404:
          description: "Dimension was not found"
        409:
          description: '#/responses/FilterConflict'
        500:
          $ref: '#/responses/InternalError'
    patch:
      tags:
      - "Public"
      - "Private"
      summary: "Update dimension options against a filter job"
      description: "Patch a list of dimension options for a filter"
      produces:
      - "application/json-patch+json"
      parameters:
      - $ref: '#/parameters/patch_options'
      - $ref: '#/parameters/if_match'
      responses:
        200:
          description: "The dimension was patched and the successfully applied patch operations are returned"
          schema:
            $ref: '#/definitions/PatchOptions'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body, filter job does not exist or too many values have been provided in the patch operations"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        404:
          description: "Dimension was not found"
        409:
          $ref: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Public"
      - "Private"
      summary: "Remove a dimension from a filter"
      description: "Remove a dimension and any options set within the dimension"
      parameters:
        - $ref: '#/parameters/if_match'
      responses:
        204:
          description: "The dimension was removed"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: "Dimension name was not found"
        409:
          description: '#/responses/FilterConflict'
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_output_id}/events:
    parameters:
      - $ref: '#/parameters/filter_output_id'
    post:
      tags:
      - "Private"
      summary: "Add an event to a filter output"
      description: |
        Add an event to a filter output
      parameters:
      - $ref: '#/parameters/event'
      security:
      - InternalAPIKey: []
      responses:
        201:
          description: "The event has been created on the filter output"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/submit:
    post:
      tags:
        - Public
        - Private
      summary: Submits a filter query for a Cantabular dataset
      produces:
        - application/json
      parameters:
         - $ref: '#/parameters/filter_id'
      responses:
        '202':
          description: Query was submitted successfully
          schema:
           $ref: '#/definitions/SubmitFilterResponse'
        '500':
          $ref: '#/responses/InternalError'
  /flex/datasets/{dataset_id}/editions/{edition}/versions/{version}/json:
    get:
      tags:
      - "Public"
      summary: "Get observations for a census dataset"
      description: "Get observations for a census datase, with capability to flex and filter the data to the users need.  If no geography, dimension, or options parameters are supplied then observations for the default geography are returned."
      parameters:
        - $ref: '#/parameters/dataset_id'
        - $ref: '#/parameters/edition'
        - $ref: '#/parameters/version'
      responses:
        200:
          description: "Json object containing all metadata for a version"
          schema:
            $ref: '#/definitions/GetDatasetJSONObservationsResponse'
        400:
          description: |
            Invalid request, reasons can be one of the following:
              * query parameters contain incorrect dimensions
        404:
          description: |
            Resource not found, reasons can be one of the following:
              * dataset id was incorrect
              * edition was incorrect
              * version was incorrect
              * observations not found for selected query paramaters
        500:
          $ref: '#/responses/InternalError'
responses:
  FilterNotFound:
    description: Filter not found
  FilterConflict:
    description: Filter was modified by an external entity
  FilterOutputNotFound:
    description: Filter output not found
  FilterOrDimensionNotFound:
    description: Filter or dimension name not found
  InternalError:
    description: Failed to process the request due to an internal error
  MethodNotSupported:
    description: Attempted to call an endpoint that is not supported for this API
definitions:
  NewFilterRequest:
    description: A model used to create new filters. Dimensions are optional
    allOf:
      - type: object
        properties:
          dataset:
            $ref: '#/definitions/Dataset'
          dimensions:
            readOnly: false
            type: array
            description: A list of dimensions in the filter job
            items:
              type: array
              items:
                $ref: "#/definitions/Dimension"
          population_type:
            type: string
            description: The population type the information is selected from.
  UpdateFilterRequest:
    description: >-
      A model used to update filters. Dimensions are optional, while downloads
      and events are for internal use only.
    allOf:
      - type: object
        properties:
          dataset:
            $ref: "#/definitions/Dataset"
          events:
            type: array
            items:
              $ref: "#/definitions/Event"
          population_type:
            type: string
            description: The population type the information is selected from.
  GetFilterResponse:
    description: A model for the response body when updating a filter
    allOf:
      - $ref: '#/definitions/Filter'
  CreateFilterResponse:
    description: "A model for the response body when creating a new filter"
    allOf:
      - $ref: '#/definitions/Filter'
  UpdateOutputRequest:
    description: >-
      A model used to update filter outputs. Only the downloads list and state
      are editable
    type: object
    properties:
      state:
        type: string
        description: >
          The state of the job can be in five states;

          * created - The job is ready to be updated with filters. (default
          state)

          * submitted - The job has been submitted to be processed. This will
          lock the job and no further changes can be done

          * completed - The job has been completed, if the filter created
          results the download links will contain links. It is
                        possible that a job gets marked as completed but no download URLs are present, this is due to the filter job
                        returning no results. See the events for more information.
          * failed - The job failed to be processed, See events for more
          information
      downloads:
        $ref: '#/definitions/Downloads'
  Filter:
    properties:
      filter_id: 
        type: string
        description: id of filter
      instance_id:
        type: string
        description: id of instance filter is based on
      dataset:
        $ref: "#/definitions/Dataset"
      published:
        type: boolean
        description: is dataset published or not
      disclosure_control:
        $ref: "#/definitions/DisclosureControl"
      type:
        type: string
        description: type of filter(e.g. flexible)
      population_type:
        type: string
        description: census dataset/blob filter is based on
      links:
        $ref: "#/definitions/FilterLinks"
  Dataset:
    readOnly: false
    type: object
    description: A version of an edition for a dataset to filter on.
    properties:
      id:
        type: string
        description: The unique identifier of a dataset
      edition:
        type: string
        description: An edition of a dataset
      version:
        type: integer
        description: A version of a dataset
  IsBasedOn:
    type: object
    description: If the dataset is related to Census, which population-type the dataset is taken from, and the type of dataset
    properties:
      id: 
        type: string
        description: the population-type the dataset is based on
      type:
        type: string
        description: the type of dataset
  Dimension:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      is_area_type:
        type: boolean
        description: Indicates if the dimension is an area type
      options:
        type: array
        items:
          type: string
  Downloads:
    type: object
    description: >
      The url to download the customised dataset. This will be blank until the
      jobs `state` has been marked completed and can only be updated if
      authorised
    properties:
      xls:
        $ref: '#/definitions/DownloadFile'
      csv:
        $ref: '#/definitions/DownloadFile'
      csvw:
        $ref: '#/definitions/DownloadFile'
      txt:
        $ref: '#/definitions/DownloadFile'
  Events:
    type: array
    items:
      $ref: '#/definitions/Event'
    description: >
      A list of events which happened to the resource, can only be updated if
      authorised.
  Event:
    type: object
    description: A description of an event which has happened to the resource
    properties:
      timestamp:
        type: string
        description: The time of the event happened
        example: 2016-07-17T08:38:25.316+0000
        format: string
      name:
        type: string
        description: The type of event which happened
        example: cantabular-export-start
  DownloadFile:
    type: object
    properties:
      href:
        type: string
        description: The URL to the generated file
      size:
        type: string
        description: The size of the file in bytes
      public:
        type: string
        description: The URL to a public-accessible download
      private:
        type: string
        description: The URL to a non public-accessible download
      skipped:
        type: boolean
        description: A flag to indicate the file will not be generated due to size
  FilterLinks:
    description: A list of links related to this resource
    readOnly: true
    type: object
    properties:
      version:
        type: object
        properties:
          href:
            description: A URL to the version being filtered
            example: >-
              http://localhost:8080/datasets/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/editions/2017/version/1
            type: string
          id:
            description: An ID of the version being filtered
            example: 1
            type: string
      self:
        type: object
        properties:
          href:
            description: A URL to the filter
            example: >-
              http://localhost:8080/filters/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC
            type: string
          id:
            description: An ID of the version being filtered
            example: "DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC"
            type: string
      dimensions:
        type: object
        properties:
          href:
            description: A URL to the dimensions list
            example: >-
              http://localhost:8080/filters/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/dimensions
            type: string
  FilterOutputLinks:
    description: A list of links related to this resource
    readOnly: true
    type: object
    properties:
      version:
        type: object
        properties:
          href:
            description: A URL to the version being filtered
            example: >-
              http://localhost:8080/datasets/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/editions/2017/version/1
            type: string
          id:
            description: An ID of the version being filtered
            example: de3bc0b6-d6c4-4e20-917e-95d7ea8c91dc
            type: string
      self:
        type: object
        properties:
          href:
            description: A URL to the filter
            example: >-
              http://localhost:8080/filters/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC
            type: string
  DisclosureControl:
    type: object
    properties:
      status:
        type: string
        description: An indicator of the status of the filter query, e.g. OK for no blocked categories, BLOCKED where disclosure rules have been triggered
      dimension:
        type: string
        description: The name of the dimension that triggers the disclosure rules
      blockedoptions:
         $ref: '#/definitions/BlockedOptions'
  PatchOptions:
    description: "A list of operations to patch dimension to filter on a dataset. Can only handle adding or removing values from options array, each element in array is processed in sequential order. Method Patch does not abide by any existing rfc standard, yet this was adapted from rfc6902 standard."
    type: array
    items:
      type: object
      description: "Item containing all necessary information to make a single operation on the resource."
      properties:
        op:
          description: |
            The operation to be made on path.
            * add - Adding multiple values that are the same or already  in resource will not be appended to array.
            * remove - Removing values that do not exist in array will not result in failure
          type: string
          enum: [
            add,
            remove
          ]
        path:
          description: "Path to value that needs to be operated on. The special '-' key is the indicator of an array at a specific path"
          type: string
          example: "/options/-"
        value:
          description: "A list of values defined by the operation value. 'op' to define the update against array"
          type: array
          items:
            type: string
  Options:
    type: object
    description: "A list of options for dimension to filter on a dataset"
    properties:
      name:
        type: string
        description: "The name of the dimension"
      is_area_type:
        type: boolean
        description: "Indicates if the dimension is an area type"
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  BlockedOptions:
    type: object
    properties:
      blocked_options:
        type: array
        items:
          type: string
        description: A list of blocked options applicable to the dimension
      blocked_count:
        type: integer
        description: The count of blocked options
  FilterOutput:
    properties:
      id:
        type: string
      filter_id:
        type: string
      instance_id:
        type: string
      dataset:
        $ref: "#/definitions/Dataset"
      published:
        type: boolean
      state:
        description: "This describes the status of the filter."
        enum:
          - "completed"
          - "created"
        type: string
      downloads:
        $ref: '#/definitions/Downloads'
      events:
        type: array
        items:
          $ref: "#/definitions/Event"
      type:
        type: string
      population_type:
        type: string
      disclosure_control:
        $ref: "#/definitions/DisclosureControl"
      links:
        $ref: "#/definitions/FilterOutputLinks"
      dimensions:
        type: array
        items:
          $ref: "#/definitions/Dimension"
  GetFilterOutputResponse:
    description: "A model for the response body when retrieving a filter output"
    allOf:
      - $ref: "#/definitions/FilterOutput"
  UpdateFilterResponse:
    description: "A model for the response body when updating a filter"
    allOf:
    - $ref: '#/definitions/Filter'
    - type: object
      properties:
        dataset:
          $ref: '#/definitions/Dataset'
        links:
          type: object
          properties:
            filter_output:
              description: "A link object containing the url to the filter output document, this is only returned once the submitted query parameter is set to true."
              type: object
              properties:
                href:
                  description: "A URL to the filter output document"
                  example: "http://localhost:8080/filter-outputs/95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
                id:
                  description: "An ID of the created filter output document"
                  example: "95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
  GetDatasetJSONObservationsResponse:
    description: "An object containing information on a list of observations for a given version of a census dataset"
    type: object
    properties:
      dimensions:
        description: "A list of dimensions for the given query"
        type: array 
        items:
          type: object
          description: "Each element is a dimension and will represent a query parameter in the request unless the query parameter is equal to a wildcard value (*)"
          properties:
            name:
              description: "The name of the dimension"
            options:
              type: array
              items:
                description: "A list of links to the corresponding dimension codes for the given `dimension_options`"
                type: object
                properties:
                  href:
                    description: "A link to the corresponding dimension code for the given `dimension_option`"
                    type: string
                    example: "http://localhost:8080/codelists/AB12CD34/codes/K02000001"
                  id:
                    description: "The id of the corresponding dimension code for the given `dimension_option`"
                    type: string
      links:
        $ref: '#/definitions/ObservationLinks'
      observations:
        description: "A list of observations found when filtering on query parameters"
        type: array
        items:
         type: integer
      total_observations:
        description: "The number of observations found"
        type: integer
  PaginationResponse:
    properties:
      limit:
        type: number
        description: maximum number of items returned
      offset:
        type: number
        description: index of first item returned
      count:
        type: number
        description: number of items returned
      total_count:
        type: number
        description: total number of items available
  ObservationLinks:
    description: "A list of links related to this observation resource"
    readOnly: true
    type: object
    properties:
      dataset_metadata:
        $ref: '#/definitions/MetadataLink'
      self:
        $ref: '#/definitions/SelfLink'
      version:
        $ref: '#/definitions/VersionLink'
  MetadataLink:
    description: "The version metadata that is associated with this resource"
    type: object
    properties:
      href:
        description: "A URL for the version metadata this resource relates to"
        type: string
  SelfLink:
    description: "A link to this resource"
    readOnly: true
    type: object
    properties:
      href:
        description: "A URL to this resource"
        type: string
  VersionLink:
    description: "The dataset version this resource belongs to"
    type: object
    properties:
      href:
        description: "A URL to the version this resource relates to"
        type: string
      id:
        description: "The version number this resource relates to"
        type: string
  Link:
    properties:
      href:
        type: string
        description: "link to resource"
      id:
        type: string
        description: "id of resource"
  DimensionItemLinks:
    properties:
      self:
        $ref: "#/definitions/Link"
      options:
        $ref: "#/definitions/Link"
      filter:
        $ref: "#/definitions/Link"
  DimensionItem:
    properties:
      name:
        type: string
      links:
        $ref: "#/definitions/DimensionItemLinks"
  DimensionItemWithArea:
    allOf:
      - $ref: "#/definitions/DimensionItem"
      - type: object
        properties:
          is_area_type:
            type: boolean
  DimensionItems:
    type: array
    items:
      $ref: "#/definitions/DimensionItem"
  GetFilterDimensionsResponse:
    allOf:
      - $ref: "#/definitions/PaginationResponse"
      - properties:
          items:
            $ref: "#/definitions/DimensionItems"
  SubmitFilterResponse:
    properties:
      instance_id:
        type: string
      filter_id:
        type: string
      dataset:
        $ref: "#/definitions/Dataset"
      links:
        $ref: "#/definitions/FilterLinks"
      population_type:
        type: string
